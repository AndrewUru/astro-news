---
import { ClientRouter } from "astro:transitions";
import "@fontsource/source-sans-pro/400.css";
import "@fontsource/source-sans-pro/600.css";
import "@fontsource/source-sans-pro/700.css";
import "@fontsource-variable/source-serif-4";
import "~/assets/styles/globals.css";
import { SITE } from "~/lib/config";
import type { ArticleMeta, Meta } from "~/lib/types";

type Props = ArticleMeta | Meta;

const props = Astro.props;

// Type guard to check if props is ArticleMeta
const isArticleMeta = (props: Props): props is ArticleMeta =>
  props.type === "article";
const canonicalURL = new URL(Astro.url.pathname, Astro.site).href;
const OGImage = new URL(props.ogImage, Astro.url).href;
---

<head>
  <!-- Global Metadata -->
  <meta charset={SITE.charset} />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />

  <!-- Favicons -->
  <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <meta name="apple-mobile-web-app-title" content="Astro News" />
  <link rel="manifest" href="/site.webmanifest" />

  <!-- RSS & Sitemap -->
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link
    rel="alternate"
    type="application/rss+xml"
    title={SITE.title}
    href={new URL("rss.xml", Astro.site)}
  />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Page Metadata -->
  <title>{props.title}</title>
  <meta name="title" content={props.metaTitle} />
  <meta name="description" content={props.description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={props.type} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={props.title} />
  <meta property="og:description" content={props.description} />
  <meta property="og:image" content={OGImage} />
  <meta property="og:image:alt" content={props.ogImageAlt} />

  <!-- Twitter -->
  <meta property="twitter:site" content={Astro.site} />
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={props.title} />
  <meta property="twitter:description" content={props.description} />
  <meta property="twitter:image" content={OGImage} />
  <meta property="twitter:image:alt" content={props.ogImageAlt} />

  {
    isArticleMeta(props) ? (
      <>
        <meta
          property="article:published_time"
          content={new Date(props.publishedTime).toISOString()}
        />
        <meta
          property="article:modified_time"
          content={new Date(props.lastModified).toISOString()}
        />

        {props.authors.map((author) => (
          <>
            <meta property="author" content={author.name} />
            <meta
              property="article:author"
              content={`${Astro.site}authors/${author.link}`}
            />
          </>
        ))}
      </>
    ) : null
  }

  <ClientRouter />
</head>
