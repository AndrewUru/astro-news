---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import ListLayout from "~/layouts/list.astro";
import { Site } from "~/lib/constants/config";
import PaginationOne from "~/components/shared/pagination-one.astro";
import { getEntry } from "astro:content";
import WideCard from "~/components/shared/wide-card.astro";
export const getStaticPaths = (async ({ paginate }) => {
  const articles = await getCollection("articles");
  return paginate(articles, { pageSize: Site.postsPerPage });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const articles = page.data;
const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = pathname[1];

const view = await getEntry("views", "articles");

if (!view || view === undefined) {
  return Astro.redirect("/404");
}

const [HEADER] = view.data.blocks;
---

<ListLayout title={HEADER.title}>
  <section class="flex-1">
    <ul>
      {
        articles.map((article) => (
          <WideCard article={article} isLast={articles.lastIndexOf(article) === articles.length - 1} />
        ))
      }
    </ul>
  </section>

  <PaginationOne
    length={page.lastPage}
    currentUrl={page.url.current}
    currentPage={page.currentPage}
    firstUrl={`/${firstPath}`}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
    lastUrl={`/${firstPath}/${page.lastPage}`}
  />
</ListLayout>
