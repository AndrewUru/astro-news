---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import ContentLayout from "@layouts/content-layout.astro";
import { getArticles } from "@utils/getArticles";
import { getDateDistance } from "@utils/getDateDistance";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { format } from "date-fns";
import type { Meta } from "@lib/types";

export const getStaticPaths = (async () => {
  const articles = await getArticles();

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}) satisfies GetStaticPaths;

type Props = CollectionEntry<"articles">;

const article = Astro.props;
const authorCollection = await getCollection("authors");
const postAuthors = article.data.authors
  .map((author) => authorCollection.filter((a) => a.id === author.id))
  .flat();

const category = await getEntry("categories", article.data.category.id);
const { Content, remarkPluginFrontmatter } = await article.render();

const tagCollection = await getCollection("tags");
const tags = article.data.tags
  .map((articleTag) => {
    const foundTag = tagCollection.find(
      (collectionTag) => collectionTag.id === articleTag.id
    );
    return foundTag
      ? { name: foundTag.data.name, path: foundTag.data.path }
      : null;
  })
  .filter((tag): tag is { name: string; path: string } => tag !== null);

const meta: Meta = {
  title: article.data.title,
  description: article.data.description,
  og_image: article.data.cover_image.src,
  tags: tags,
};
---

<ContentLayout {...meta}>
  <section class="mb-4 space-y-4 border-b pb-1 max-w-4xl mx-auto">
    <div>
      <h1 class="text-3xl font-bold mb-2 text-balance">
        {article.data.title}
      </h1>
      <p class="text-lg text-gray-500 text-balance">
        {article.data.description}
      </p>
    </div>
    <div>
      <ul class="flex gap-4">
        {
          postAuthors.map((author) => (
            <li>
              <a href={`/author/${author.id}`} class="flex gap-2 items-center">
                <Image
                  src={author.data.avatar}
                  alt={author.data.name}
                  class="w-8 h-8 rounded-full"
                />
                <span class="text-sm font-medium capitalize">
                  {author.data.name}
                </span>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="grid grid-cols-2 md:flex gap-6 text-sm text-stone-800">
      <div class="col-span-1">
        <p>Published on :</p>
        <time datetime={article.data.published_time}>
          <span class="text-xs text-stone-600"
            >{getDateDistance(article.data.published_time)}</span
          >
        </time>
      </div>
      <div class="col-span-1">
        <p>Last modified :</p>
        <time datetime={remarkPluginFrontmatter.lastModified}>
          <span class="text-xs text-stone-600">
            {format(remarkPluginFrontmatter.lastModified, "dd MMMM yyyy")}
          </span>
        </time>
      </div>
      <div class="col-span-1">
        <p>Category :</p>
        <span class="text-xs text-stone-600">
          {category.data.name}
        </span>
      </div>
      <div class="col-span-1">
        <p>Reading time :</p>
        <span class="text-xs text-stone-600">
          {remarkPluginFrontmatter.minutesRead}
        </span>
      </div>
    </div>
  </section>
  <section>
    <div
      class="mb-8 rounded-md overflow-hidden w-full lg:max-w-5xl mx-auto aspect-video relative"
    >
      <Image
        widths={[360, 768, article.data.cover_image.width]}
        sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw"
        src={article.data.cover_image}
        alt={article.data.title}
        class="w-full h-full object-cover"
      />
      <span
        class="absolute bottom-2 right-2 p-1 z-10 bg-black bg-opacity-50 text-white text-xs hidden md:block rounded-sm"
      >
        {article.data.cover_image_alt}
      </span>
    </div>
    <div
      class="prose prose-lg lg:prose-xl prose-headings:font-bold prose-a:text-blue-500 prose-a:underline max-w-4xl mx-auto"
    >
      <Content />
    </div>
  </section>
</ContentLayout>
