---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import ContentLayout from "@layouts/content-layout.astro";
import { getArticles } from "@utils/getArticles";
import { getDateDistance } from "@utils/getDateDistance";
import { getEntries } from "astro:content";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
export const getStaticPaths = (async ({ paginate }) => {
  const articles = await getArticles();

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));

}) satisfies GetStaticPaths;

type Props = CollectionEntry<'articles'>;

const article = Astro.props
const authorCollection = await getCollection('authors')
const postAuthors = article.data.authors
  .map((author) => authorCollection.filter((a) => a.id === author.id))
  .flat();

const category = await getEntry('categories', article.data.category.id);
const { Content } = await article.render();
---
<ContentLayout title={article.id}>
    <section class="mb-4 space-y-4 border-b pb-1 max-w-4xl mx-auto">
    <div>
        <h1 class="text-3xl font-bold mb-1">
            {article.data.title}
        </h1>
        <p class="text-lg text-gray-500">
            {article.data.description}
        </p>
    </div>
        <div>
            <ul class="flex gap-4">
            {
                postAuthors.map((author) => (
                    <li>
                        <a href={`/author/${author.id}`} class="flex gap-2 items-center">
                            <Image src={author.data.avatar} alt={author.data.name} class="w-8 h-8 rounded-full"/>
                            <span class="text-sm font-medium capitalize">{author.data.name}</span>
                        </a>
                    </li>
                ))
            }
            </ul>
        </div>
        <div class="text-sm text-gray-500 space-x-4">
            <time datetime={article.data.published_time}>
                <span class="">{getDateDistance(article.data.published_time)}</span>
            </time>
            <span>
            {
              category.data.name
            }
            </span>
        </div>
        </div>
    </section>
    <section>
        <div class="mb-8 rounded-md overflow-hidden w-full lg:max-w-5xl mx-auto aspect-video relative">
            <Image
            widths={[360, 768, article.data.cover_image.width]}
            sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw"
            src={article.data.cover_image} alt={article.data.title}
            class="w-full h-full object-cover"/>
            <span class="absolute bottom-2 right-2 p-1 z-10 bg-black bg-opacity-50 text-white text-xs hidden md:block rounded-sm">
            {
              article.data.cover_image_alt
            }
            </span>
        </div>
        <div class="prose prose-lg lg:prose-xl prose-headings:font-bold prose-a:text-blue-500 prose-a:underline max-w-4xl mx-auto">
        <Content />
        </div>
    </section>
</ContentLayout>
